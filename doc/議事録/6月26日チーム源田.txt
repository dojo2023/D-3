6月26日（月）議事録
【参加者】
上野・小神野・川口・古川・目崎

【作成者】
古川

【目標】
全体：
ログイン前を、内装外装ともに完成させる。
ログイン後も、内装8割、外装8割を目標とする。
全体目標の進捗目標→90％

個人：
リーダー：目崎
→CSSとJavaScriptのサポート
　自分のできる仕事を探す
構成管理：小神野
→投稿と通報に関するプログラムを完了させる
コミュ ：古川
→ログイン前のcssに関する表示の問題を解決し、完成に持ち込む
品質管理：上野
→設定画面のcssを半分ほど終わらせる。
発表 ：川口
→発表用の読み上げ原稿を完成させる 

【行ったこと】
・ログイン後の機能面のプログラミングを進めた
・ログイン前のcssが9割がた完成した
・ログイン後のcssを進めた

【話したこと】
・掲示板画面の検索
→フリーワード検索と同じ
→いったん検索ボタンは普通のボタンで後からデザインを付ける

・投稿の詳細表示について
→詳細ボタンをつけて、そこから飛ぶようにする

・今後のスケジュール
→明日までに機能面は完成させる
→水曜日までにデザイン面の完成を目指す

【座学】
〈テストについて〉
→テストの基本・注意点・観点

・テストする意味
→ビジネスとして求められる品質が世の中にはある
→「バグつぶし」は効率が悪い（モグラたたき・よくないテストの方法）
→「品質を上げる」という目線で行うことが重要（「バグだし」がテストではない）

・テストの基本
→ブラックボックスで考える（基本的には）
　→設計書を見る（今回は外部設計書（本来は見た目を決めるもの/実際は事細かく表現やエラーの表示箇所なども決められている）がベース）
　→決められた動作を実行できているか
→今回は細かく決めていないため、どのように表示されるかお互いに共有しながら行う方がいい
→画面側だけで完結することもできる
　→あまり良い方法ではない
　→データーベースの中を見た方がいい場合もある

・本来の流れ
①	内部設計からテストケースを起こす
　→プログラム単位でテストを行う（すべてのプログラムでテストを行うのが理想）
　→非効率になってはいけない

②	外部設計からテストケースを起こす
→やりやすい
→細かな挙動についてテストケース漏れが発生しやすいため、動作パターンを設計書で考慮できていると良い

③	要件定義書からテストケースを起こす
→最終的なテスト
→顧客の要件を満たしているかの観点

・要件定義書にマッチしているかが重要
→外部設計のテストで終わってしまうことが多い
→顧客にとって重要なことは要件定義書にある
→性能要件をチェック（応答速度・負荷テストなど）

・セキュリティに関すること
→専門機関に委託することもある
→今回は結合テストまでで終了
→きちんと動作すれば良し

・今月の流れ
あらかじめ目標を定める
→観点の話し合いぐらいはやれるといい
→ペルソナが満足して使い続けるレベルかどうか
　→テスト観点の抽出
　→テスト観点からテストパターンを抽出
　→テストを実施
　→触ってみておかしい部分を抽出
　→足りなかったテストは何か、なぜあらかじめ出せなかったのかという点で振り返る

・テスト時の注意点
→モグラたたきをしない
→探索的テストも計画を立てて行う（無計画にやらない）
→システム全体の品質を向上させるという観点で実施（一部だけとりあえず直すというのはつぎはぎしているだけ）
→しっかりコミットとプッシュしておく

・バグを発見したら
→結合テスト以降のバグは単純ミスとは言えない
　→簡単に直せない
　→なぜ起きたのか（なぜなぜ分析）で原因を分析する
　→同様の問題が潜んでいそうな箇所を洗い出し、すべてをテストする
　→今回は学ぶことが重要（チームでバグについて話し合う）